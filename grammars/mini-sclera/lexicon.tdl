;;; -*- Mode: TDL; Coding: utf-8 -*-
;;; Mini-Sclera lexicon

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;; Nouns

I := 1st-sg-pronoun-noun-lex &
  [ STEM < "I" >,
    SYNSEM.LOCAL.CAT.HEAD.CASE nom,
    SYNSEM.LKEYS.KEYREL.PRED "_pronoun_n_rel" ].

me := 1st-sg-pronoun-noun-lex &
  [ STEM < "me" >,
    SYNSEM.LOCAL.CAT.HEAD.CASE acc,
    SYNSEM.LKEYS.KEYREL.PRED "_pronoun_n_rel" ].

you_sg_1 := 2nd-sg-pronoun-noun-lex &
  [ STEM < "you" >,
    SYNSEM.LOCAL.CAT.HEAD.CASE nom,
    SYNSEM.LKEYS.KEYREL.PRED "_pronoun_n_rel" ].

you_pl_1 :=  2nd-pl-pronoun-noun-lex &
  [ STEM < "you" >,
    SYNSEM.LOCAL.CAT.HEAD.CASE nom,
    SYNSEM.LKEYS.KEYREL.PRED "_pronoun_n_rel" ].


; you_acc :=  &

; he :=  &
; him := &
; she :=  &
; her := &

; we :=  &
; us := &
; you_pl_nom
; you_sg_acc

; they_nom
; they_acc

; my :=
;   [ STEM < "my" >,
;     SYNSEM.LOCAL.CAT.HEAD.CASE gen,
;     SYNSEM.LKEYS.KEYREL.PRED "_my_n_poss_1sg_rel" ]. ; ehhhh


;;

dog := common-noun-lex &
  [ STEM < "dog" >,
    SYNSEM.LKEYS.KEYREL.PRED "_dog_n_rel" ].

girl := common-noun-lex &
  [ STEM < "girl" >,
    SYNSEM.LKEYS.KEYREL.PRED "_girl_n_rel" ].

love := common-noun-lex &
  [ STEM < "love" >,
    SYNSEM.LKEYS.KEYREL.PRED "_love_n_rel" ].

;flesje-water-prik := &

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;; Adjectives

; ziek :=  &


;;;;;;;;;;;;;;;;;;;;;;;;;;;;;; Verbs

sleep := intrans-verb-lex &
 [ STEM < "sleep" >,
   SYNSEM.LKEYS.KEYREL.PRED "_sleep_v_rel" ].

bark := intrans-verb-lex &
  [ STEM < "bark" >,
    SYNSEM.LKEYS.KEYREL.PRED "_bark_v_rel" ].

buy := trans-verb-lex &
  [ STEM < "buy" >,
    SYNSEM.LKEYS.KEYREL.PRED "_buy_v_rel" ].

; douchen := -> een douche nemen/take+a+shower

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;; Complex Situations


; \\
;NEEDS TO BECOME
;               \_.-> hond-blaffen ; subject = hond

; hond-borstelen ; object = hond

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;; Auxiliaries

;;;;;; copula

; zijn :=  3rd-sg-cop-lex &
;   [ STEM < "is" > ].

;;;;;; modality

;;; deontic

; mogen :=  &   ; used for questions

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;; Determiners (do not exist in this grammar)

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;; Negation
;;; (using negative adverb symbolized by 'kruis-rood')

; not :=  &
;  [ STEM < "kruis-rood" > ].

; no :=  &
;  [ STEM < "kruis-rood" > ].


;;;;;;;;;;;;;;;;;;;;;;;;;;;;;; Conjunction

en := conj-lex &
  [ STEM < "plus" >,
    SYNSEM.LKEYS.KEYREL.PRED "_and_coord_rel",
    CFORM "1" ].

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;; experimental: interaction

;;;;; (mostly minor clause-items and idiomatic cxns)

; hey
; goeiemorgen/good+morning
; hoe-gaat-het-met-je/how+are+you
; tot-ziens/see+you
